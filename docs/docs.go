// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/scribe-org/Scribe-Server/blob/main/.github/CODE_OF_CONDUCT.md",
        "contact": {
            "name": "Scribe Team",
            "url": "https://scri.be/",
            "email": "team@scri.be"
        },
        "license": {
            "name": "GPL-3.0 license",
            "url": "https://github.com/scribe-org/Scribe-Server/blob/main/LICENSE.txt"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/contracts": {
            "get": {
                "description": "If a 'lang' query parameter is provided, returns the contract for that specific language. Otherwise, returns all contracts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Retrieve schema contracts",
                "parameters": [
                    {
                        "type": "string",
                        "example": "es",
                        "description": "Language code (ISO 639-1)",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved contracts",
                        "schema": {
                            "$ref": "#/definitions/models.ContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid language code provided",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Language not supported",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to load contract files",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/data-version/{lang}": {
            "get": {
                "description": "Provides last modified timestamps for each data type of the specified language.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language Data"
                ],
                "summary": "Get version information for a language",
                "parameters": [
                    {
                        "type": "string",
                        "example": "fr",
                        "description": "Language code (ISO 639-1)",
                        "name": "lang",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved language version details",
                        "schema": {
                            "$ref": "#/definitions/models.LanguageVersionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid language code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Language not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/data/{lang}": {
            "get": {
                "description": "Returns all available language data and schema contract for the given ISO 639-1 language code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language Data"
                ],
                "summary": "Retrieve full language data",
                "parameters": [
                    {
                        "type": "string",
                        "example": "en",
                        "description": "Language code (ISO 639-1)",
                        "name": "lang",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved language data",
                        "schema": {
                            "$ref": "#/definitions/models.LanguageDataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or malformed language code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Requested language not found or unsupported",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error while fetching data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/language-stats": {
            "get": {
                "description": "Returns the number of nouns and verbs for the specified language codes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get statistics for one or multiple languages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of language codes to filter (e.g., ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of language statistics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LanguageStatisticsReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Language not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/languages": {
            "get": {
                "description": "Fetches all languages currently supported by Scribe, along with their associated data types.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Languages"
                ],
                "summary": "List all supported languages",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved available languages",
                        "schema": {
                            "$ref": "#/definitions/models.AvailableLanguagesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred while fetching languages",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AvailableLanguagesResponse": {
            "type": "object",
            "properties": {
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LanguageInfo"
                    }
                }
            }
        },
        "models.Contract": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "Field definitions grouped by section and name",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "updated_at": {
                    "description": "Last update timestamp (RFC3339 format)",
                    "type": "string"
                },
                "version": {
                    "description": "Contract version identifier",
                    "type": "string"
                }
            }
        },
        "models.ContractsResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Description of the error",
                    "type": "string"
                }
            }
        },
        "models.LanguageDataResponse": {
            "type": "object",
            "properties": {
                "contract": {
                    "description": "Contract details defining the schema",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Contract"
                        }
                    ]
                },
                "data": {
                    "description": "Actual data, structured according to the contract",
                    "type": "object",
                    "additionalProperties": {}
                },
                "language": {
                    "description": "ISO code of the language",
                    "type": "string"
                }
            }
        },
        "models.LanguageInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "ISO code of the language (e.g. \"en\", \"fr\")",
                    "type": "string"
                },
                "data_types": {
                    "description": "List of supported data types for this language",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.LanguageStatisticsReponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "ISO code of the language",
                    "type": "string"
                },
                "language_name": {
                    "description": "Human-readable language name (nullable)",
                    "type": "string"
                },
                "nouns": {
                    "description": "Count of noun entries",
                    "type": "integer"
                },
                "verbs": {
                    "description": "Count of verb entries",
                    "type": "integer"
                }
            }
        },
        "models.LanguageVersionResponse": {
            "type": "object",
            "properties": {
                "language": {
                    "description": "ISO code of the language",
                    "type": "string"
                },
                "versions": {
                    "description": "Map of data types to version identifiers",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "GitHub Repository",
        "url": "https://github.com/scribe-org/Scribe-Server"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "scribe-server.toolforge.org",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Scribe Server API",
	Description:      "Scribe-Server is a backend service that provides the API by which data is available for download within Scribe apps.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
